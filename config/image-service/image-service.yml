---
### OIDC Credentials ###
security:
  jwt:
    clientId: images
  oidc:
    clientId: images
    secret: images-oidc-super-secret
  ip:
    whitelist: '10.30.0.0/20'
webservice:
  client-id: images
  client-secret: xxx

server:
  servlet:
    contextPath: /image-service
grails:
  serverURL: '${common.protocol}://${common.domain}/image-service'

imageservice:
  imagestore:
    root: '/data/image-service/store'
    inbox: '/data/image-service/incoming'
    staging: '/data/image-service/store/staging'
  batchUpload: '/data/image-service/upload'
  exportDir: '/data/image-service/exports'
  apache:
    root: '${grails.serverURL}${grails.contextPath}/store/'
    # space separated list
    multiple_roots: '${grails.serverURL}${grails.contextPath}/store/'
  thumbnail:
    size: 300

serverName: '${common.protocol}://${common.domain}/image-service'

skin:
  layout: 'ala-main'


facets: [ "recognisedLicence", "dataResourceUid", "creator.keyword", "imageSize", "fileType", "format", "dateUploadedYearMonth" ]

management:
  health:
    elasticsearch:
      enabled: false
elasticsearch:
  indexName: "images"
  maxFacetSize: 10000
  maxOffset: 10000
  maxPageSize: 200
  defaultPageSize: 10
  batchIndexSize: 1000
  hosts:
      - host: "elasticsearch"
        scheme: "http"
        port: 9200

# The URLs to recognise as image service URL for the purposes of recognising incoming
# URLs for images (to avoid re-downloading the images)
imageServiceUrls: [ "${common.protocol}://${common.domain}/image-service" ]

# External links
collectory:
  baseURL: "${common.protocol}://${common.domain}/collectory"
biocache:
  baseURL: "${common.protocol}://${common.domain}/biocache-hub"
  service:
      baseURL: "http://biocache-service.${common.internalDomain}:8080/biocache-service"
bie:
  baseURL: "${common.protocol}://${common.domain}/bie-hub"

userDetails:
  url: "${common.protocol}://${common.domain}/userdetails/"

dataSource:
  driverClassName: org.postgresql.Driver
  dialect: org.hibernate.spatial.dialect.postgis.PostgisPG9Dialect
  url: 'jdbc:postgresql://postgis:5432/images'
  username: 'images'
  password: 'my-super-secret-password'
  pooled: true
  jmxExport: true
  properties:
    jmxEnabled: true
    initialSize: 5
    maxActive: 50
    minIdle: 5
    maxIdle: 25
    maxWait: 10000
    maxAge: 600000
    timeBetweenEvictionRunsMillis: 5000
    minEvictableIdleTimeMillis: 60000
    validationQuery: SELECT 1
    validationQueryTimeout: 3
    validationInterval: 15000
    testOnBorrow: true
    testWhileIdle: true
    testOnReturn: false
    jdbcInterceptors: ConnectionState
    defaultTransactionIsolation: 2 # TRANSACTION_READ_COMMITTED
