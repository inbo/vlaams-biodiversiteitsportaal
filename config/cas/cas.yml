info:
  description: ALA CAS Configuration
server:
  port: 8080
  session:
    timeout: 86400  # seconds, 24 hours
  ssl:
    enabled: false
    key-store:
jndi:
  hikari:
    jdbccas:
      # driverClass: com.mysql.jdbc.Driver
      url: jdbc:mysql://cas:my-super-secret-password@mysql:3306/cas?serverTimezone=Europe/Brussels&zeroDateTimeBehavior=convertToNull&logger=Slf4JLogger&gatherPerfMetrics=true&logSlowQueries=true&characterEncoding=UTF-8&nullCatalogMeansCurrent=true&nullNamePatternMatchesAll=true&noAccessToProcedureBodies=true&useSSL=False&allowPublicKeyRetrieval=true
      dataSourceProperties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048

  # dataSourceName: java:comp/env/jdbccas

logging:
  config: "file:/config/config/common/log4j2.xml"

ala:
  userDetailsBaseUrl: ${common.protocol}://auth.${common.domain}/userdetails/
  cookie:
    domain: ${common.domain}
    secure: false
    httpOnly: true
    maxAge: -1
    name: ALA-Auth
    path: /
  userCreator:
    userCreatePassword: wormishmensurablearchitecture
    enableUserSurvey: false
    jdbc:
      dataSourceName: java:comp/env/jdbccas
      enableUpdateLastLoginTime: true
      enableRequestExtraAttributes: true
      enableUpdateLegacyPasswords: true

  skin:
    baseUrl: ${common.protocol}://branding.${common.domain}
    termsUrl:
    uiVersion: 3
    headerFooterUrl: ${common.protocol}://branding.${common.domain}/
    favIconBaseUrl: ${common.protocol}://branding.${common.domain}/
    bieBaseUrl: ${common.protocol}://species.${common.domain}
    bieSearchPath: /search
    userDetailsUrl: ${common.protocol}://auth.${common.domain}/userdetails/
    orgShortName: VBP
    orgLongName: Vlaams Biodiversiteitsportaal
    orgNameKey: vbp


cas:
  server:
    name: ${common.protocol}://auth.${common.domain}
    prefix: ${common.protocol}://auth.${common.domain}/cas
  host:
    name: auth.${common.domain}
  http-web-request:
    cors:
      enabled: true
      allow-origins:
        - ${common.protocol}://spatial.${common.domain}
  jdbc:
    showSql: false
  audit:
    mongo:
      clientUri: mongodb://audit:my-super-secret-password@mongodb:27017/cas-audit-repository?retryWrites=true&ssl=false&allowPublicKeyRetrieval=true
  authn:
    throttle:
      failure:
        range-seconds: 30
        threshold: 3
    pac4j:
      issuer: https://biodiversiteitsportaal-dev.auth.eu-west-1.amazoncognito.com/oauth2
      client-id: YOUR_COGNITO_APP_CLIENT_ID
      client-secret: YOUR_COGNITO_APP_CLIENT_SECRET
      discovery-uri: https://biodiversiteitsportaal-dev.auth.eu-west-1.amazoncognito.com/.well-known/openid-configuration
      response-type: code
      scope: openid profile email
      callback-url: ${common.protocol}://auth.${common.domain}/cas/oidc/callback
      typedIdUsed: true
      cookie:
        crypto:
          signing:
            key:
          encryption:
            key:

    oidc:
      core:
        issuer: ${common.protocol}://auth.${common.domain}/cas/oidc
        jwksFile: file:/data/cas/keystore.jwks
  monitor:
    endpoints:
      discovery:
        enabled: true
      enabled: true
      sensitive: "*"
    jdbc:
      validationQuery: /* ping */ SELECT 1
      dataSourceName: java:comp/env/jdbccas
  serviceRegistry:
    initFromJson: false
    mongo:
      clientUri: mongodb://services:my-super-secret-password@mongodb:27017/cas-service-registry?retryWrites=true&ssl=false&allowPublicKeyRetrieval=true
  ticket:
    registry:
      cleaner:
        schedule:
          enabled: true
      mongo:
        clientUri: mongodb://tickets:my-super-secret-password@mongodb:27017/cas-ticket-registry?retryWrites=true&ssl=false&allowPublicKeyRetrieval=true
    st:
      timeToKillInSeconds: 15
  tgc:
    crypto:
      enabled: false
  webflow:
    crypto:
      signing:
        key:
      encryption:
        key:

# Enable these for Spring Boot actuator (required for Spring Boot Admin client)

#endpoints:
#  enabled: true
#  sensitive: "*"
#security:
#  user:
#    name: admin
#    password: secret
#    role:
#      - ACTUATOR
#  basic:
#    enabled: true
#    authorizeMode: role
#    # realm: ALA CAS
#    # path:
#    #   - /**
#management:
#  security:
#    # enabled: false
#    roles: ACTUATOR
#  server:
#    # port: 9000
#    # address: 127.0.0.1
#    ssl:
#      enabled: false
#  endpoint:
#    info:
#      enabled: true
#  endpoints:
#    enabled-by-default: true
#    # ip: .*
#    actuatorEndpointsEnabled: true
#    web:
#      exposure:
#        include: "*"

spring:
  session:
    store-type: none
  autoconfigure:
    exclude: >
      org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration,
      org.springframework.boot.actuate.autoconfigure.security.servlet.ManagementWebSecurityAutoConfiguration
  #  boot:
  #    admin:
  #      server:
  #        enabled: true
  #        ssl: false
  #      url: ${common.protocol}://auth.${common.domain}

  flyway:
    baselineOnMigrate: true # Create DB from scratch
    url: jdbc:mysql://cas:my-super-secret-password@mysql:3306/cas?serverTimezone=Europe/Brussels&zeroDateTimeBehavior=convertToNull&logger=Slf4JLogger&gatherPerfMetrics=true&logSlowQueries=true&characterEncoding=UTF-8&nullCatalogMeansCurrent=true&nullNamePatternMatchesAll=true&noAccessToProcedureBodies=true&useSSL=False&allowPublicKeyRetrieval=true