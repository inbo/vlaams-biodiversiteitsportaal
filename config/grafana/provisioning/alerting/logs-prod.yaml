apiVersion: 1
groups:
    - orgId: 1
      name: Cloudwatch alerts
      folder: VBP - PROD
      interval: 5m
      rules:
        - uid: cloudwatch-logs-prod
          title: Errors logged by portal services
          condition: C
          data:
            - refId: A
              relativeTimeRange:
                from: 900
                to: 0
              datasourceUid: cloudwatch-prod
              model:
                dimensions: {}
                expression: |-
                    fields @timestamp, @message, @logStream |
                      filter @message like /\[ERROR\]/ |
                      sort @timestamp desc |
                      parse @message /\[ERROR\](?<error>.+?)(?: \[AWS-XRAY-TRACE-ID: (?<@xrayTraceId>.+?)@(?<@xraySegementId>.+?)\])?\n/ |
                      parse @logStream /^(?<service>.+?)\/(?<container>.+?)\/(?<containerId>.+)/ |
                      stats count(*) as count by service, container, containerId, error, bin(1m) |
                      limit 10
                id: ""
                intervalMs: 60000
                label: ""
                logGroups:
                    - arn: /inbo/vbp/ecs
                      name: /inbo/vbp/ecs
                matchExact: true
                maxDataPoints: 100
                metricEditorMode: 0
                metricName: ""
                metricQueryType: 0
                namespace: ""
                period: ""
                queryMode: Logs
                refId: A
                region: default
                sqlExpression: ""
                statistic: Average
                statsGroups:
                    - service
                    - container
                    - containerId
                    - error
                    - bin(1m)
            - refId: B
              relativeTimeRange:
                from: 900
                to: 0
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params: []
                      reducer:
                        params: []
                        type: avg
                      type: query
                datasource:
                    name: Expression
                    type: __expr__
                    uid: __expr__
                expression: A
                intervalMs: 1000
                maxDataPoints: 43200
                reducer: sum
                refId: B
                settings:
                    mode: dropNN
                type: reduce
            - refId: C
              relativeTimeRange:
                from: 900
                to: 0
              datasourceUid: __expr__
              model:
                conditions:
                    - evaluator:
                        params:
                            - 0
                            - 0
                        type: gt
                      operator:
                        type: and
                      query:
                        params: []
                      reducer:
                        params: []
                        type: avg
                      type: query
                datasource:
                    name: Expression
                    type: __expr__
                    uid: __expr__
                expression: B
                intervalMs: 1000
                maxDataPoints: 43200
                refId: C
                type: threshold
          dashboardUid: ecs-logs-prod
          panelId: 1
          noDataState: OK
          execErrState: Error
          for: 0s
          annotations:
            __dashboardUid__: ecs-logs-prod
            __panelId__: "1"
            description: <code>{{ reReplaceAll "\\x1b\\[[;\\d]*[A-Za-z]" "" $labels.error }}</code>
            summary: 'Container {{ $labels.container }} for service {{ $labels.service }} logged an error:'
          labels: {}
          isPaused: false
