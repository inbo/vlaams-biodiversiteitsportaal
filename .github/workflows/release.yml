name: Release new version of the portal
run-name: ${{ github.actor }} is releasing a new version
on:
  push:
    branches:
      - 'main'
      - 'dev'
jobs:
  get-next-version:
    runs-on: [ self-hosted ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm clean-install
      - name: Verify the integrity of provenance attestations and registry signatures for installed dependencies
        run: npm audit signatures
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release --dry-run
    outputs:
      new-release-published: ${{ steps.semantic.outputs.new-release-published }}
      new-release-version: ${{ steps.semantic.outputs.new-release-version }}
      new-release-git-tag: ${{ steps.semantic.outputs.new-release-git-tag }}

  upload-branding-to-s3:
    needs: get-next-version
    if: needs.get-next-version.outputs.new-release-published == 'true'
    runs-on: [ self-hosted ]
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4

      - uses: actions/cache@v4
        id: npm-cache
        with:
          path: ./branding/node_modules
          key: ${{ runner.os }}-npm-${{ hashFiles('./branding/package-lock.json') }}
          restore-keys: ${{ runner.os }}-npm-

      - name: Build branding website S3
        working-directory: ./branding
        env:
          VERSION: ${{needs.get-next-version.outputs.version}}
          AWS_S3_BUCKET: biodiversiteitsportaal-dev-branding
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
        run: |
          npm install && ./deploy-to-s3.sh

  build-and-push-docker-images:
    needs: get-next-version
    if: needs.get-next-version.outputs.new-release-published == 'true'
    runs-on: [ self-hosted ]
    steps:
      - uses: actions/checkout@v4

      - name: Build and push docker images
        working-directory: ./docker
        env:
          TAG: ${{ (github.ref == 'refs/heads/main' && steps.output-version.outputs.new-release-version) || 'dev' }}
        run: |
          docker buildx bake --push all

  release:
    needs:
      - get-next-version
      - upload-branding-to-s3
      - build-and-push-docker-images
    if: github.ref == 'refs/heads/main' && needs.get-next-version.outputs.new-release-published == 'true'
    runs-on: [ self-hosted ]
    steps:
      - uses: actions/checkout@v4

      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}