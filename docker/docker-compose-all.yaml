services:
  living-atlas:
    image: 632683202044.dkr.ecr.eu-west-1.amazonaws.com/living-atlas:dev
    build:
      context: atlas-all
      x-bake:
        platforms:
        - linux/arm64
    ports:
      - "8080:8080"
    volumes:
      - ../config:/config/config:ro
      - vbp-data:/data
    environment:
      SPRING_PROFILES_ACTIVE: local
#      LOG_FORMAT: JSON

  postgis:
    image: postgis/postgis:16-3.4-alpine
    ports:
      - 5432:5432
    volumes:
      - ./db-init/postgis:/docker-entrypoint-initdb.d
      - postgis:/var/lib/postgresql/data
    #      - ./db-init/postgis/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
    environment:
      - POSTGRES_PASSWORD=my-super-secret-password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - POSTGRES_HOST_AUTH_METHOD=md5
      - POSTGRES_INITDB_ARGS=--auth-host=md5
    healthcheck:
      test: pg_isready

  geoserver:
    image: kartoza/geoserver:2.23.2
    volumes:
      #geoserver data folder
      # - ./spatial/geoserver/geoserver-files:/data/geoserver-files/
      #Spatials service data folder. If they are both in the same machine, some layers are not needed to be uploaded.
      - vbp-data:/data
    ports:
      - "8079:8080"
    environment:
      JAVA_OPTS: -Xmx1g -Xms128m -Xss256k
      #Geoserver
      GEOSERVER_ADMIN_USER: admin
      GEOSERVER_ADMIN_PASSWORD: geoserver
      #If you want to create a user/password
      #NEW_USER: true
      USERNAME: admin
      PASS: my-super-secret-password
      #Geoserver internal server url. It is used to run a local script to init geoserver
      GEOSERVER_URL: http://localhost:8080/geoserver
      GEOSERVER_LOG_PROFILE: PRODUCTION_LOGGING
      GEOSERVER_DATA_DIR: /data/geoserver_data_dir
      GEOWEBCACHE_CACHE_DIR: /data/geoserver_data_dir/gwc
      GEOSERVER_LOG_LOCATION: /data/geoserver_data_dir/logs/geoserver.log
      FOOTPRINTS_DATA_DIR: /data/geoserver_data_dir/footprints_dir
      RELINQUISH_LOG4J_CONTROL: true
      ENABLE_JSONP: true
      MAX_FILTER_RULES: 20
      OPTIMIZE_LINE_WIDTH: false
    healthcheck:
      test: curl --fail --head --silent http://localhost:8080

  mysql:
    image: mysql
    # NOTE: use of "mysql_native_password" is not recommended: https://dev.mysql.com/doc/refman/8.0/en/upgrading-from-previous-series.html#upgrade-caching-sha2-password
    # (this is just an example, not intended to be a production configuration)
    # command: --default-authentication-plugin=mysql_native_password
    ports:
      - 3306:3306
    volumes:
      - ./db-init/mysql:/docker-entrypoint-initdb.d
      - mysql:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: my-super-secret-password
    healthcheck:
      test: mysqladmin ping -h localhost

  cassandradb:
    image: cassandra:3
    environment:
      HEAP_NEWSIZE: 128M
      MAX_HEAP_SIZE: 2048M
    volumes:
      - cassandra:/var/lib/cassandra
    healthcheck:
      test: [ "CMD-SHELL", "[ $$(nodetool statusgossip) = running ]" ]

  cassandra-load-keyspace:
    image: cassandra:3
    environment:
      HEAP_NEWSIZE: 128M
      MAX_HEAP_SIZE: 2048M
    volumes:
      - ./db-init/cassandra:/docker-entrypoint-initdb.d
    command: bash -c "cqlsh cassandradb -f /docker-entrypoint-initdb.d/*.cql"
    depends_on:
      cassandradb:
        condition: service_healthy

  solr:
    image: solr:8
    ports:
      - "8983:8983"
    volumes:
      - ./solr-data:/var/solr/data
    environment:
      SOLR_HEAP: 2g
    healthcheck:
      test: [ "CMD-SHELL", "curl -sf http://localhost:8983/solr/bie/admin/ping | grep '\"status\":\"OK\"'" ]
    networks:
      default:
        aliases:
          - index.la-flanders.org

  mailhog:
    image: mailhog/mailhog
    ports:
      - "1025:1025"
      - "8025:8025"
    healthcheck:
      test: "wget localhost:8025 --spider -q"
    networks:
      default:
        aliases:
          - mail.la-flanders.org

  elasticsearch:
    image: elasticsearch:7.17.20
    environment:
      ES_JAVA_OPTS: -Xms128m -Xmx1024m
      node.name: elasticsearch
      xpack.security.enabled: false
      discovery.type: single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    volumes:
      - elasticsearch:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://elasticsearch:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5

  namematching:
    image: atlasoflivingaustralia/ala-namematching-service:v20210811-3
    ports:
      - "9179:9179"

  nginx:
    image: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ../generated/la-flanders-branding/public:/srv/branding.la-flanders.org/www/
    ports:
      - "80:80"
    environment:
      NGINX_HOST: la-flanders.org
      NGINX_PORT: 80
    healthcheck:
      test: service nginx status || exit 1
    networks:
      default:
        aliases:
          - auth.la-flanders.org
          - branding.la-flanders.org
          - collections.la-flanders.org
          - images.la-flanders.org
          - lists.la-flanders.org
          - logger.la-flanders.org
          - records-ws.la-flanders.org
          - records.la-flanders.org
          - regions.la-flanders.org
          - spatial.la-flanders.org
          - species-ws.la-flanders.org
          - species.la-flanders.org

  mock-oauth2-server:
    image: ghcr.io/navikt/mock-oauth2-server:2.1.5
    ports:
      - "9999:9999"
    environment:
      LOG_LEVEL: "info"
      SERVER_PORT: 9999

networks:
  default:

volumes:
  vbp-data:
  cassandra:
  mysql:
  mongo:
  postgis:
  elasticsearch:
