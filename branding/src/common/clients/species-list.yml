openapi: 3.0.1
info:
  title: Species list REST services
  description: REST services for interacting with the Species lists
  termsOfService: ""
  contact:
    name: Support
    email: support.natuurdata@inbo.be
  license:
    name: Mozilla Public License 1.1
    url: https://www.mozilla.org/en-US/MPL/1.1/
  version: 5.3.0-SNAPSHOT
servers:
- url: /species-list
paths:
  /ws/createItem:
    post:
      tags:
      - List Items
      summary: Create a species list item for a species list
      description: Create a species list item for a species list
      operationId: Create a species list item for a species list
      parameters:
      - name: druid
        in: query
        description: The data resource id
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON object containing new species list item guid, rawScientificName\
          \ and extra fields and values."
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpeciesListItemBody'
        required: true
      responses:
        "200":
          description: Success
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
      security:
      - openIdConnect:
        - ala/internal
  /ws/deleteItem:
    get:
      tags:
      - List Items
      summary: Delete a species list item for a species list
      description: Delete a species list item for a species list
      operationId: Delete a species list item for a species list
      parameters:
      - name: druid
        in: query
        description: The data resource id
        required: true
        schema:
          type: string
      - name: guid
        in: query
        description: The taxon id
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Success
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
      security:
      - openIdConnect:
        - ala/internal
  /ws/speciesList/filter:
    post:
      tags:
      - Lists
      summary: Filter lists based on specified attributes
      description: Search and filter lists based on specified attributes i.e. scientificNames
        and drIds
      operationId: Filter lists based on specified attributes
      requestBody:
        description: The JSON object with filter attributes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterListsBody'
        required: true
      responses:
        "200":
          description: List of druid which match the supplied filter
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ws/findSpeciesByName:
    get:
      tags:
      - List Items
      summary: Get all KVPs in species list
      description: Get all KVPs within a species list item for a specified species
        list
      operationId: Get all KVPs in a species list
      parameters:
      - name: druid
        in: path
        description: The data resource id or comma separated data resource ids to
          identify a species list
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of of all available KVPs and the scientific name
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ListItemKVPResponse'
  /ws/speciesList/unpublished:
    get:
      tags:
      - List Items
      summary: Get all the unpublished list items in batches of 100
      description: Get all the unpublished list items in batches of 100
      operationId: Get all the unpublished list items in batches of 100
      responses:
        "200":
          description: A CSV text content with a list of unpublished list items
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            '*/*':
              schema:
                type: string
  /ws/speciesListItems/distinct/{field}:
    get:
      tags:
      - List Items
      summary: 'Get distinct values for a field in species list item '
      description: "Get a list distinct values for a field in species list item "
      operationId: 'Get distinct values for a field in species list item '
      parameters:
      - name: field
        in: path
        description: "The field e.g.(kingdom, matchedName, rawScientificName etc.)\
          \ to get distinct values for across all species list items"
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of distinct values for a specified species list item field
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ws/speciesList/{druid}:
    get:
      tags:
      - Lists
      summary: Get species list detail
      description: Get details of a specific list
      operationId: Get species list detail
      parameters:
      - name: druid
        in: path
        description: 'The data resource id to identify a list. This parameter is required
          for requesting a species list but optional for requesting species lists '
        required: true
        schema:
          type: string
      - name: sort
        in: query
        description: The field  on which to sort the returned results
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Species List(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListsResponse'
    post:
      tags:
      - Lists
      summary: Add  or replace a species list
      description: "Add new species list or replace an existing one. When no druid\
        \ is provided in the JSON body, a new list will be created. Providing a druid\
        \ in the path will attempt to update and existing list"
      operationId: Add or replace a species list_3
      parameters:
      - name: druid
        in: path
        description: The data resource id to identify an existing list
        required: true
        schema:
          type: string
      - name: X-ALA-userId
        in: header
        description: The user id to save the list against
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON object containing new species list. Two JSON structures\
          \ are supported: - v1 (unstructured list items): {\"listName\": \"list1\"\
          ,  \"listType\": \"TEST\", \"listItems\": \"item1,item2,item3\"}, \n- v2\
          \ (structured list items with KVP): { \"listName\": \"list1\", \"listType\"\
          : \"TEST\", \"listItems\": [ { \"itemName\": \"item1\", \"kvpValues\": [\
          \ { \"key\": \"key1\", \"value\": \"value1\" }, { \"key\": \"key2\", \"\
          value\": \"value2\" } ] } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterListsBody'
        required: true
      responses:
        "201":
          description: List of druid which match the supplied filter
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveListResponse'
      security:
      - openIdConnect: []
  /ws/speciesListInternal/{druid}:
    get:
      tags:
      - Lists
      summary: Get species list(s) detail
      description: Get details of species lists or a specific list
      operationId: Get species list(s) detail
      parameters:
      - name: druid
        in: path
        description: 'The data resource id to identify a list. This parameter is required
          for requesting a species list but optional for requesting species lists '
        required: true
        schema:
          type: string
      - name: sort
        in: query
        description: The field  on which to sort the returned results
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Species List(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListsResponse'
      security:
      - openIdConnect:
        - ala/internal
  /ws/speciesListItems/{druid}:
    get:
      tags:
      - List Items
      summary: Get species list(s) item details
      description: Get details of individual items i.e. species for specified species
        list(s)
      operationId: Get species list(s) item details
      parameters:
      - name: druid
        in: path
        description: "The data resource id or comma separated data resource ids  to\
          \ identify list(s) to return list items for e.g. '/ws/speciesListItems/dr123,dr781,dr332'"
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: "Optional query string to search common name, supplied name and\
          \ scientific name in the lists specified by the 'druid' e.g. 'Eurystomus\
          \ orientalis'"
        schema:
          type: string
      - name: nonulls
        in: query
        description: The value to specify whether to include or exclude species list
          item with null value for species guid
        schema:
          type: boolean
      - name: sort
        in: query
        description: The field  on which to sort the returned results. Default is
          'itemOrder'
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      - name: includeKVP
        in: query
        description: 'The value to specify whether to include KVP (key value pairs)
          values in the returned list item '
        schema:
          type: boolean
      responses:
        "200":
          description: Species list item(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetListItemsResponse'
  /ws/speciesListItemsInternal/{druid}:
    get:
      tags:
      - List Items
      summary: Get species list(s) item details
      description: Get details of individual items i.e. species for specified species
        list(s)
      operationId: Get species list(s) item details_1
      parameters:
      - name: druid
        in: path
        description: "The data resource id or comma separated data resource ids  to\
          \ identify list(s) to return list items for e.g. '/ws/speciesListItems/dr123,dr781,dr332'"
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: "Optional query string to search common name, supplied name and\
          \ scientific name in the lists specified by the 'druid' e.g. 'Eurystomus\
          \ orientalis'"
        schema:
          type: string
      - name: nonulls
        in: query
        description: The value to specify whether to include or exclude species list
          item with null value for species guid
        schema:
          type: boolean
      - name: sort
        in: query
        description: The field  on which to sort the returned results. Default is
          'itemOrder'
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      - name: includeKVP
        in: query
        description: 'The value to specify whether to include KVP (key value pairs)
          values in the returned list item '
        schema:
          type: boolean
      responses:
        "200":
          description: Species list item(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetListItemsResponse'
      security:
      - openIdConnect:
        - ala/internal
  /ws/species/{guid}:
    get:
      tags:
      - List Items
      summary: Get species list items details for specified guid(s)
      description: Get details of species list items i.e species for a list of guid(s)
      operationId: Get species list items details for specified guid(s)
      parameters:
      - name: guid
        in: path
        description: A comma separated list of guid(s) to identify a species list
          item i.e. species.
        required: true
        schema:
          type: string
      - name: dr
        in: query
        description: A comma separated list of data resource ids to identify species
          lists to return matching list items from
        schema:
          type: string
      - name: isBIE
        in: query
        description: The boolean value to specify whether the request is from the
          BIE
        schema:
          type: boolean
      responses:
        "200":
          description: Species List item(s) details
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetListItemsForSpeciesResponse'
  /ws/speciesList/{druid}/taxa:
    get:
      tags:
      - List Items
      summary: Get  guid(s) contained in a species list
      description: 'Get a list of guid(s) for taxa/species list items contained in
        a species list '
      operationId: Get guid(s) contained in a species list
      parameters:
      - name: druid
        in: path
        description: The data resource id to identify a list
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Species List item guid(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ws/listCommonKeys:
    get:
      tags:
      - keys
      summary: 'Get a list of  common keys in species lists '
      description: 'Get a list of keys from KVP common across a list multiple species
        lists '
      operationId: 'Get a list of common keys in species lists '
      parameters:
      - name: druid
        in: query
        description: Comma separated data resource ids to identify lists
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of common keys present across multiple species lists
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ws/speciesListItems/byKeys:
    get:
      tags:
      - keys
      summary: 'Finds species list items that contains specific keys '
      description: Finds species list items that contains specific keys in their KVP
      operationId: 'Finds species list items that contains specific keys '
      parameters:
      - name: druid
        in: query
        description: A list of comma separated data resource ids to identify lists
          by
        required: true
        schema:
          type: string
      - name: keys
        in: query
        description: A list of comma separated keys to search species list items by
        required: true
        schema:
          type: string
      responses:
        "200":
          description: Species list item names and their matched KVP
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListItemsByKeysResponse'
  /ws/speciesListItems/keys:
    get:
      tags:
      - keys
      summary: Get a list of keys in a species listt
      description: Get a list of keys in KVP available for a species list
      operationId: Get a list of keys in a species list
      parameters:
      - name: druid
        in: query
        description: The data resource id or comma separated data resource ids to
          identify list(s) to return the keys for
        required: true
        schema:
          type: string
      responses:
        "200":
          description: List of keys present within a species list
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /ws/speciesList/publish/{druid}:
    get:
      tags:
      - List Items
      summary: Mark species list items as published
      description: Mark all species list items under thea specified species list as
        published
      operationId: Mark species list items as published
      parameters:
      - name: druid
        in: path
        description: The data resource id to identify a list
        required: true
        schema:
          type: string
      responses:
        "200":
          description: A message stating the operation has been successful
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            text/html:
              schema:
                type: string
  /ws/speciesList:
    get:
      tags:
      - Lists
      summary: Get species list detail
      description: Get details of species lists
      operationId: Get species list detail_1
      parameters:
      - name: sort
        in: query
        description: The field  on which to sort the returned results
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: Species List(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetListsResponse'
    post:
      tags:
      - Lists
      summary: Add  or replace a species list
      description: "Add new species list or replace an existing one. When no druid\
        \ is provided in the JSON body, a new list will be created. Providing a druid\
        \ in the path will attempt to update and existing list"
      operationId: Add or replace a species list
      parameters:
      - name: X-ALA-userId
        in: header
        description: The user id to save the list against
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON object containing new species list. Two JSON structures\
          \ are supported: - v1 (unstructured list items): {\"listName\": \"list1\"\
          ,  \"listType\": \"TEST\", \"listItems\": \"item1,item2,item3\"}, \n- v2\
          \ (structured list items with KVP): { \"listName\": \"list1\", \"listType\"\
          : \"TEST\", \"listItems\": [ { \"itemName\": \"item1\", \"kvpValues\": [\
          \ { \"key\": \"key1\", \"value\": \"value1\" }, { \"key\": \"key2\", \"\
          value\": \"value2\" } ] } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterListsBody'
        required: true
      responses:
        "201":
          description: List of druid which match the supplied filter
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveListResponse'
      security:
      - openIdConnect: []
  /ws/speciesListPost/{druid}:
    post:
      tags:
      - Lists
      summary: Add  or replace a species list
      description: "Add new species list or replace an existing one. When no druid\
        \ is provided in the JSON body, a new list will be created. Providing a druid\
        \ in the path will attempt to update and existing list"
      operationId: Add or replace a species list_1
      parameters:
      - name: druid
        in: path
        description: The data resource id to identify an existing list
        required: true
        schema:
          type: string
      - name: X-ALA-userId
        in: header
        description: The user id to save the list against
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON object containing new species list. Two JSON structures\
          \ are supported: - v1 (unstructured list items): {\"listName\": \"list1\"\
          ,  \"listType\": \"TEST\", \"listItems\": \"item1,item2,item3\"}, \n- v2\
          \ (structured list items with KVP): { \"listName\": \"list1\", \"listType\"\
          : \"TEST\", \"listItems\": [ { \"itemName\": \"item1\", \"kvpValues\": [\
          \ { \"key\": \"key1\", \"value\": \"value1\" }, { \"key\": \"key2\", \"\
          value\": \"value2\" } ] } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterListsBody'
        required: true
      responses:
        "201":
          description: List of druid which match the supplied filter
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveListResponse'
      deprecated: true
      security:
      - openIdConnect: []
  /ws/speciesListPost:
    post:
      tags:
      - Lists
      summary: Add  or replace a species list
      description: "Add new species list or replace an existing one. When no druid\
        \ is provided in the JSON body, a new list will be created. Providing a druid\
        \ in the path will attempt to update and existing list"
      operationId: Add or replace a species list_2
      parameters:
      - name: druid
        in: path
        description: The data resource id to identify an existing list
        required: true
        schema:
          type: string
      - name: X-ALA-userId
        in: header
        description: The user id to save the list against
        required: true
        schema:
          type: string
      requestBody:
        description: "The JSON object containing new species list. Two JSON structures\
          \ are supported: - v1 (unstructured list items): {\"listName\": \"list1\"\
          ,  \"listType\": \"TEST\", \"listItems\": \"item1,item2,item3\"}, \n- v2\
          \ (structured list items with KVP): { \"listName\": \"list1\", \"listType\"\
          : \"TEST\", \"listItems\": [ { \"itemName\": \"item1\", \"kvpValues\": [\
          \ { \"key\": \"key1\", \"value\": \"value1\" }, { \"key\": \"key2\", \"\
          value\": \"value2\" } ] } ] }"
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FilterListsBody'
        required: true
      responses:
        "201":
          description: List of druid which match the supplied filter
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SaveListResponse'
      deprecated: true
      security:
      - openIdConnect: []
  /ws/queryListItemOrKVP:
    get:
      tags:
      - List Items
      summary: Get species list(s) item details
      description: Get details of individual items i.e. species for specified species
        list(s) filter-able by specified fields
      operationId: Get species list(s) item details_2
      parameters:
      - name: druid
        in: query
        description: "The data resource id or comma separated data resource ids  to\
          \ identify list(s) to return list items for e.g. '/ws/speciesListItems/dr123,dr781,dr332'"
        required: true
        schema:
          type: string
      - name: q
        in: query
        description: "Optional query string to search common name, supplied name and\
          \ scientific name in the lists specified by the 'druid' e.g. 'Eurystomus\
          \ orientalis'"
        schema:
          type: string
      - name: fields
        in: query
        description: "Used together with 'q', this specifies the field or fields \
          \ in list item and list item key value pairs (KVP) to apply the search query\
          \ `q` against e.g. fields=commonName,group&q=bird"
        required: true
        schema:
          type: string
      - name: nonulls
        in: query
        description: The value to specify whether to include or exclude species list
          item with null value for species guid
        schema:
          type: boolean
      - name: sort
        in: query
        description: The field  on which to sort the returned results. Default is
          'itemOrder'
        schema:
          type: string
      - name: max
        in: query
        description: The number of records to return
        schema:
          type: integer
          format: int32
      - name: offset
        in: query
        description: "The records offset, to enable paging"
        schema:
          type: integer
          format: int32
      - name: includeKVP
        in: query
        description: 'The value to specify whether to include KVP (key value pairs)
          values in the returned list item '
        schema:
          type: boolean
      responses:
        "200":
          description: Species list item(s)
          headers:
            Access-Control-Allow-Origin:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Methods:
              description: CORS header
              style: simple
              schema:
                type: string
            Access-Control-Allow-Headers:
              description: CORS header
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetListItemsResponse'
components:
  schemas:
    SpeciesListItemBody:
      type: object
      properties:
        guid:
          type: string
        rawScientificName:
          type: string
        extra:
          type: object
          additionalProperties:
            type: string
    FilterListsBody:
      type: object
      properties:
        scientificNames:
          type: array
          items:
            type: string
        drIds:
          type: array
          items:
            type: string
    ListItemKVPResponse:
      type: object
      properties:
        kvps:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        name:
          type: string
    GetListsResponse:
      type: object
      properties:
        listCount:
          type: integer
          format: int32
        lists:
          type: array
          items:
            $ref: '#/components/schemas/ListsReturnValue'
        max:
          type: integer
          format: int32
        offset:
          type: integer
          format: int32
        order:
          type: string
        sort:
          type: string
    ListsReturnValue:
      type: object
      properties:
        authority:
          type: string
        category:
          type: string
        dataResourceUid:
          type: string
        dateCreated:
          type: string
        fullName:
          type: string
        generalisation:
          type: string
        isAuthoritative:
          type: boolean
        isInvasive:
          type: boolean
        isThreatened:
          type: boolean
        itemCount:
          type: integer
          format: int32
        astUpdated:
          type: string
        listName:
          type: string
        listType:
          type: string
        region:
          type: string
        sdsType:
          type: string
        username:
          type: string
    GetListItemsResponse:
      type: object
      properties:
        commonName:
          type: string
        dataResourceUid:
          type: string
        id:
          type: integer
          format: int32
        kvpValues:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        lsid:
          type: string
        name:
          type: string
        scientificName:
          type: string
    GetListItemsForSpeciesResponse:
      type: object
      properties:
        dataResourceUid:
          type: string
        guid:
          type: string
        kvpValues:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
        list:
          type: object
          additionalProperties:
            type: string
    ListItemsByKeysResponse:
      type: object
      properties:
        value:
          type: object
          additionalProperties:
            type: array
            items:
              type: object
              additionalProperties:
                type: string
    SaveListResponse:
      type: object
      properties:
        status:
          type: integer
          format: int32
        message:
          type: string
        driod:
          type: string
        guid:
          type: array
          items:
            type: string
  securitySchemes:
    openIdConnect:
      type: openIdConnect
      openIdConnectUrl: https://keycloak-dev.inbo.be/realms/vbp/.well-known/openid-configuration
    oauth:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://auth.natuurdata.dev.inbo.be/cas/oidc/token
          refreshUrl: https://auth.natuurdata.dev.inbo.be/cas/oidc/refresh
          scopes: {}
        authorizationCode:
          authorizationUrl: https://auth.natuurdata.dev.inbo.be/cas/oidc/authorize
          tokenUrl: https://auth.natuurdata.dev.inbo.be/cas/oidc/token
          refreshUrl: https://auth.natuurdata.dev.inbo.be/cas/oidc/refresh
          scopes: {}
    jwt:
      type: http
      scheme: bearer
      bearerFormat: JWT
